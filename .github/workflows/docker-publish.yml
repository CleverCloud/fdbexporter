name: DockerHub publish
on:
  release:
    types: [published]

env:
  #REGISTRY: ghcr.io
  IMAGE_NAME: clevercloud/foundationdb-exporter

jobs:
  determine-versions:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      latest_7_3: ${{ steps.fdb-versions.outputs.LATEST_7_3_VERSION }}
      latest_7_1: ${{ steps.fdb-versions.outputs.LATEST_7_1_VERSION }}
    steps:
      - name: Fetch latest releases
        id: fdb-versions
        run: |
          export LATEST_7_3_VERSION=$(gh release list -R apple/foundationdb --exclude-pre-releases --json name,tagName --exclude-drafts -q "[.[] | select(.name | startswith(\"Release 7.3\"))][0].tagName")
          export LATEST_7_1_VERSION=$(gh release list -R apple/foundationdb --exclude-pre-releases --json name,tagName --exclude-drafts -q "[.[] | select(.name | startswith(\"Release 7.1\"))][0].tagName")
          echo "LATEST_7_3_VERSION=${LATEST_7_3_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "LATEST_7_1_VERSION=${LATEST_7_1_VERSION}" >> "${GITHUB_OUTPUT}"

          echo ${LATEST_7_3_VERSION}
          echo ${LATEST_7_1_VERSION}


  build:
    name: "[${{matrix.FOUNDATIONDB_REF}}] Build & Publish"
    runs-on: ubuntu-latest
    needs: [determine-versions]
    strategy:
      matrix:
        FOUNDATIONDB_REF:
          - ${{needs.determine-versions.outputs.latest_7_3}}
          - ${{needs.determine-versions.outputs.latest_7_1}}
          # We can add some static version as we need them
          - "7.1.37"
    env:
      REF: ${{github.ref_name}}
      REGISTRY: dockerhub
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 #v3.4.0
        with:
          cosign-release: 'v2.2.3'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: "[${{env.REF}}/${{matrix.FOUNDATIONDB_REF}}] Extract Docker metadata"
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
            suffix=-${{ matrix.FOUNDATIONDB_REF }},onlatest=true
          tags: |
            type=semver,pattern={{version}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: "[${{env.REF}}/${{matrix.FOUNDATIONDB_REF}}] Build and push Docker image"
        id: build-and-push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: FDB_VERSION=${{ matrix.FOUNDATIONDB_REF }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: "[${{env.REF}}/${{matrix.FOUNDATIONDB_REF}}] Sign the published Docker image"
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
